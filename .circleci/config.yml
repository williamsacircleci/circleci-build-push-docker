version: 2.1

## Aliases

ignore-master: &ignore-master
  filters:
    branches:
      ignore:
        - master

only-master: &only-master
  filters:
    branches:
      only: master

executor-auth-aws: &executor-auth-aws
  aws_auth:
    aws_access_key_id: $AWS_ACCESS_KEY_ID
    aws_secret_access_key: $AWS_SECRET_ACCESS_KEY

### EXECUTORS

executors:
  heycar-citools-helm:
    docker:
      - image: $AWS_ECR_REGISTRY_MGMT/heycar-mgmt-ecr-citools:helm-latest
        <<: *executor-auth-aws

### COMMANDS

commands:
  circle-default-envs:
    description: "Default Circle Environment variables"
    steps:
      - run: |
          export GIT_BRANCH=${CIRCLE_BRANCH}
          export BUILD_ID=$(echo ${CIRCLE_SHA1} | rev |cut -c1-4 | rev)
          export BUILD_TAG="circleci-${CIRCLE_JOB}-${CIRCLE_BUILD_NUM}"
          export BUILD_DISPLAY_NAME=${CIRCLE_BUILD_NUM}
          export JOB_BASE_NAME=${CIRCLE_JOB}
          export JOB_NAME=${CIRCLE_BUILD_URL}
          echo "export GIT_BRANCH=${GIT_BRANCH}" >> $BASH_ENV
          echo "export BUILD_ID=${BUILD_ID}" >> $BASH_ENV
          echo "export BUILD_TAG=${BUILD_TAG}" >> $BASH_ENV
          echo "export BUILD_DISPLAY_NAME=${BUILD_DISPLAY_NAME}" >> $BASH_ENV
          echo "export JOB_BASE_NAME=${JOB_BASE_NAME}" >> $BASH_ENV
          echo "export JOB_NAME=${JOB_NAME}" >> $BASH_ENV
          source $BASH_ENV
          
  assume-aws-role:
    description: "Assume AWS ROLE"
    parameters:
      aws_access_key_id:
        description: AWS Access Key ID
        type: string
        default: "${AWS_ACCESS_KEY_ID}"
      aws_secret_key:
        description: AWS Secret Key
        type: string
        default: "${AWS_SECRET_ACCESS_KEY}"
      aws_assume_role_arn:
        description: AWS Role ARN To Assumes
        type: string
    steps:
      - run: |
          export AWS_ACCESS_KEY_ID=<< parameters.aws_access_key_id >>
          export AWS_SECRET_ACCESS_KEY=<< parameters.aws_secret_key >>
          export temp_role=$(aws sts assume-role \
                  --role-arn << parameters.aws_assume_role_arn >> \
                  --role-session-name "circle-ci-assume")
          export AWS_ACCESS_KEY_ID_TEMP=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)
          export AWS_SECRET_ACCESS_KEY_TEMP=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)
          export AWS_SESSION_TOKEN_TEMP=$(echo $temp_role | jq .Credentials.SessionToken | xargs)
          echo "export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_TEMP}" >> $BASH_ENV
          echo "export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_TEMP}" >> $BASH_ENV
          echo "export AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN_TEMP}" >> $BASH_ENV
          source $BASH_ENV

### JOBS

jobs:
  deploy_development_docker:
    machine: true
    steps:
      - checkout
      - run:
          environment:
            AWS_DEFAULT_REGION: eu-west-1
          command: |
            docker build -t heycar-dev-ecr-ingest:$CIRCLE_SHA1  .
            echo ""
            docker images


### WORKFLOWS

workflows:
  version: 2.1

  docker_build:
    jobs:
      - deploy_development_docker:
          <<: *ignore-master